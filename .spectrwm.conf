# PLEASE READ THE MAN PAGE BEFORE EDITING THIS FILE!
# https://htmlpreview.github.io/?https://github.com/conformal/spectrwm/blob/master/spectrwm.html
# NOTE: all rgb color values in this file are in hex! see XQueryColor for examples

# workspace_limit	= 22
# focus_mode		= default
# focus_close		= previous
# focus_close_wrap	= 1
# focus_default		= last
# spawn_position	= next
# workspace_clamp	= 1
# warp_focus		= 1
# warp_pointer		= 1

# Window Decoration
border_width		    = 0
# color_focus		= red
# color_focus_maximized	= yellow
# color_unfocus		= rgb:88/88/88
# color_unfocus_maximized	= rgb:88/88/00
region_padding	        = 5
tile_gap		        = 5

# Region containment
# Distance window must be dragged/resized beyond the region edge before it is
# allowed outside the region.
# boundary_width 		= 50

# Remove window border when bar is disabled and there is only one window in workspace
# disable_border		= 1

# Bar Settings
# bar_enabled		= 1
# bar_enabled_ws[1]	= 1
bar_border_width	    = 0
# bar_border[1]		= rgb:00/80/80
# bar_border_unfocus[1]	= rgb:00/40/40
# bar_color[1]		= black
# bar_color_selected[1]	= rgb:00/80/80
# bar_font_color[1]	= rgb:a0/a0/a0
# bar_font_color_selected	= black
bar_font		        = Dejavu Mons
# bar_font_pua		= Typicons:pixelsize=14:antialias=true
bar_action		= ~/.config/spectrwm/baraction.sh
# bar_action_expand	= 0
bar_justify		    = right
# bar_format		= +N:+I +S <+D>+4<%a %b %d %R %Z %Y+8<+A+4<+V
# workspace_indicator	= listcurrent,listactive,markcurrent,printnames
# bar_at_bottom		= 1
# stack_enabled		= 1
# clock_enabled		= 1
clock_format		    = %a %b %d %R
# iconic_enabled	= 0
# maximize_hide_bar	= 0
# window_class_enabled	= 0
# window_instance_enabled	= 0
# window_name_enabled	= 0
# verbose_layout		= 1
# urgent_enabled		= 1
# urgent_collapse	= 0

# Dialog box size ratio when using TRANSSZ quirk; 0.3 < dialog_ratio <= 1.0
# dialog_ratio		= 0.6

# Split a non-RandR dual head setup into one region per monitor
# (non-standard driver-based multihead is not seen by spectrwm)
# region		= screen[1]:1280x1024+0+0
# region		= screen[1]:1280x1024+1280+0

# Launch applications in a workspace of choice
autorun                 = ws[1]:compton -b
# autorun = ws[1]:feh --bg-fill /home/ncicone/wallpapers/wallhaven-391q16_1600x900.png

# Set workspace name at start
# name			= ws[1]:IRC
# name			= ws[2]:Email
# name			= ws[3]:Browse
# name			= ws[10]:Music

# Mod key, (Windows key is Mod4) (Apple key on OSX is Mod2)
modkey                  = Mod4 

# This allows you to include pre-defined key bindings for your keyboard layout.
keyboard_mapping        = /dev/null

# PROGRAMS

# Validated default programs:
# program[lock]		= xlock
# program[menu]		= dmenu_run $dmenu_bottom -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected
# program[search]	= dmenu $dmenu_bottom -i -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected
# program[name_workspace]	= dmenu $dmenu_bottom -p Workspace -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected

# Optional default programs that will only be validated if you override:
# program[screenshot_all]	= screenshot.sh full	# optional
# program[screenshot_wind]	= screenshot.sh window	# optional
# program[initscr]	= initscreen.sh			# optional

# EXAMPLE: Define 'firefox' action and bind to key.
program[firefox]	= firefox
program[term]       = kitty
bind[firefox]		= MOD+b

# QUIRKS
# Default quirks, remove with: quirk[class:name] = NONE
# quirk[MPlayer:xv]			= FLOAT + FULLSCREEN + FOCUSPREV
# quirk[OpenOffice.org 3.1:VCLSalFrame]	= FLOAT
# quirk[Firefox-bin:firefox-bin]		= TRANSSZ
# quirk[Firefox:Dialog]			= FLOAT
# quirk[Gimp:gimp]			= FLOAT + ANYWHERE
# quirk[XTerm:xterm]			= XTERM_FONTADJ
# quirk[xine:Xine Window]			= FLOAT + ANYWHERE
# quirk[Xitk:Xitk Combo]			= FLOAT + ANYWHERE
# quirk[xine:xine Panel]			= FLOAT + ANYWHERE
# quirk[Xitk:Xine Window]			= FLOAT + ANYWHERE
# quirk[xine:xine Video Fullscreen Window] = FULLSCREEN + FLOAT
# quirk[pcb:pcb]				= FLOAT

# Key bindings for United States (us) keyboards
# unbind with: bind[] = <keys>
# bind[bar_toggle]	    = MOD+b
bind[bar_toggle_ws]	    = MOD+Shift+b
bind[button2]		    = MOD+v
bind[cycle_layout]	    = MOD+space
bind[flip_layout]	    = MOD+Shift+backslash
bind[float_toggle]	    = MOD+t
bind[focus_next]	    = MOD+j
bind[focus_next]	    = MOD+Tab
bind[focus_prev]	    = MOD+k
bind[focus_prev]	    = MOD+Shift+Tab
bind[height_grow]	    = MOD+Shift+equal
bind[height_shrink]	    = MOD+Shift+minus
bind[iconify]		    = MOD+x
bind[lock]			    = MOD+Shift+Delete
bind[master_add]	    = MOD+comma
bind[master_del]	    = MOD+period
bind[master_grow]	    = MOD+l
bind[master_shrink]	    = MOD+h
bind[maximize_toggle]	= MOD+e
bind[menu]		        = MOD+m
bind[move_down]		    = MOD+Shift+bracketright
bind[move_left]		    = MOD+bracketleft
bind[move_right]	    = MOD+bracketright
bind[move_up]		    = MOD+Shift+bracketleft
bind[mvrg_1]		    = MOD+Shift+KP_End
bind[mvrg_2]		    = MOD+Shift+KP_Down
bind[mvws_1]		    = MOD+Shift+u
bind[mvws_2]		    = MOD+Shift+i
bind[mvws_3]		    = MOD+Shift+o
bind[mvws_4]		    = MOD+Shift+p
bind[name_workspace]	= MOD+Shift+slash
bind[quit]		        = MOD+Shift+q
bind[raise_toggle]	    = MOD+Shift+r
bind[restart]		    = MOD+q
bind[rg_1]		        = MOD+KP_End
bind[rg_2]		        = MOD+KP_Down
bind[rg_next]		    = MOD+Shift+Right
bind[rg_prev]		    = MOD+Shift+Left
bind[screenshot_all]	= MOD+s
bind[screenshot_wind]	= MOD+Shift+s
bind[search_win]	    = MOD+s
bind[search_workspace]	= MOD+slash
bind[stack_dec]		    = MOD+Shift+period
bind[stack_inc]		    = MOD+Shift+comma
bind[stack_reset]	    = MOD+Shift+space
bind[swap_next]		    = MOD+Shift+j
bind[swap_prev]		    = MOD+Shift+k
bind[term]		        = MOD+Return
bind[uniconify]		    = MOD+Shift+w
bind[version]		    = MOD+Shift+v
bind[width_grow]	    = MOD+equal
bind[width_shrink]	    = MOD+minus
bind[wind_del]		    = MOD+w
bind[wind_kill]		    = MOD+Shift+x
bind[ws_1]		        = MOD+u
bind[ws_2]		        = MOD+i
bind[ws_3]		        = MOD+o
bind[ws_4]		        = MOD+p
bind[ws_next]		    = MOD+Right
bind[ws_next_all]	    = MOD+Up
bind[ws_next_move]	    = MOD+Shift+Up
bind[ws_prev]		    = MOD+Left
bind[ws_prev_all]	    = MOD+Down
bind[ws_prev_move]	    = MOD+Shift+Down
